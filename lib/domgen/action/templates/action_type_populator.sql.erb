/* DO NOT EDIT: File is auto-generated */

INSERT INTO [Action].[tblActionClassification]([Code])
  SELECT 'RPC'
  WHERE 0 = ( SELECT COUNT(*) FROM [Action].[tblActionClassification] WHERE [Code] = 'RPC' )

DECLARE @Ids TABLE ( Id VARCHAR(MAX) NOT NULL );

<%
  repository.data_modules.each do |data_module|
    data_module.services.select {|s| s.action?}.each do |service|
      service.methods.select {|m| m.action? }.each do |method|
        userKey = method.qualified_name.gsub('#', '.')
        code = method.action.code
-%>
INSERT INTO @Ids([Id]) SELECT '<%= code %>'

-- Method: <%= userKey %>
INSERT INTO [Action].[tblActionType](ClassificationId,
                                     ParentId,
                                     UserKey,
                                     ApplicationEvent,
                                     Language,
                                     Code,
                                     Script,
                                     ExternalId,
                                     Priority,
                                     RequestSchema,
                                     ResponseSchema,
                                     PreCompletionUserFeedbackPattern,
                                     PostCompletionUserFeedbackPattern,
                                     OnErrorUserFeedbackPattern,
                                     MaxErrorCount,
                                     RetryRate,
                                     StoreResponseOnSuccess,
                                     GenerateMessageOnSuccess,
                                     RetainFailedMessageDuration,
                                     StoreErrorMessageOnFailure,
                                     PersistOnSuccess,
                                     PersistDuration,
                                     ClearErrorOnSuccess,
                                     Inactive)
SELECT C.Id AS ClassificationId,
       NULL AS ParentId,
       '<%= userKey %>' AS UserKey,
       <%= !method.action.application_event.nil? ? "'#{method.action.application_event}'" : 'NULL' %> AS ApplicationEvent,
       0 as Language,
       '<%= code %>' AS Code,
       NULL as Script,
       0 AS ExternalId,
       <%= method.action.priority %> as Priority,
       '<%= method.action.json_request_schema %>' AS RequestSchema,
       '<%= method.action.json_response_schema %>' AS ResponseSchema,
       '' AS PreCompletionUserFeedbackPattern,
       '' AS PostCompletionUserFeedbackPattern,
       '' AS OnErrorUserFeedbackPattern,
       <%= method.action.max_error_count %> AS MaxErrorCount,
       <%= method.action.retry_rate %> AS RetryRate,
       <%= method.action.store_response_on_success? ? '1' : '0' %> AS StoreResponseOnSuccess,
       <%= method.action.generate_message_on_success? ? '1' : '0' %> AS GenerateMessageOnSuccess,
       <%= method.action.retain_failed_message_duration %> AS RetainFailedMessageDuration,
       <%= method.action.store_error_message_on_failure? ? '1' : '0' %> AS StoreErrorMessageOnFailure,
       <%= method.action.persist_on_success? ? '1' : '0' %> AS PersistOnSuccess,
       <%= method.action.persist_duration.nil? ? 'NULL' : method.action.persist_duration %> AS PersistDuration,
       <%= method.action.clear_error_on_success? ? '1' : '0' %> AS ClearErrorOnSuccess,
       0 AS Inactive
FROM [Action].[tblActionClassification] C
WHERE C.[Code] = 'RPC' AND
      0 = ( SELECT COUNT(*) FROM [Action].[tblActionType] WHERE [Code] = '<%= code %>' )

IF @@rowcount = 0 AND @@error = 0
  UPDATE AT
  SET PreCompletionUserFeedbackPattern = '',
      PostCompletionUserFeedbackPattern = '',
      OnErrorUserFeedbackPattern = '',
      MaxErrorCount = <%= method.action.max_error_count %>,
      RetryRate = <%= method.action.retry_rate %>,
      StoreResponseOnSuccess = <%= method.action.store_response_on_success? ? '1' : '0' %>,
      GenerateMessageOnSuccess = <%= method.action.generate_message_on_success? ? '1' : '0' %>,
      RetainFailedMessageDuration = <%= method.action.retain_failed_message_duration %>,
      StoreErrorMessageOnFailure = <%= method.action.store_error_message_on_failure? ? '1' : '0' %>,
      PersistOnSuccess = <%= method.action.persist_on_success? ? '1' : '0' %>,
      PersistDuration = <%= method.action.persist_duration.nil? ? 'NULL' : method.action.persist_duration %>,
      ClearErrorOnSuccess = <%= method.action.clear_error_on_success? ? '1' : '0' %>
  FROM [Action].[tblActionType] AT
  JOIN [Action].[tblActionClassification] AC ON AC.[Id] = AT.[ClassificationId] AND AC.[Code] = 'RPC'
  WHERE AT.[Code] = '<%= code %>'

<%-
      end
    end
  end
-%>
-- Mark as inactive any RPC actions that are currently active but have not been added in this set
UPDATE AT
SET [Inactive] = 1
FROM [Action].[tblActionType] AT
JOIN [Action].[tblActionClassification] AC ON AC.[Code] = 'RPC' AND AT.[ClassificationId] = AC.[Id]
WHERE AT.[Code] NOT IN (SELECT [Id] FROM @Ids) AND AT.[Inactive] = 0
