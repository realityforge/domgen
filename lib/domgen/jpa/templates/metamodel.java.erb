/* DO NOT EDIT: File is auto-generated */
package <%= entity.data_module.jpa.entity_package %>;

@javax.annotation.Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.persistence.metamodel.StaticMetamodel(<%= entity.jpa.name %>.class)
public <%= entity.abstract? ? "abstract " : "" %>class <%= entity.jpa.metamodel_name %>
<%= entity.extends ?
  "    extends #{entity.data_module.entity_by_name(entity.extends).jpa.qualified_metamodel_name}\n" :
  "" %>{<%
   entity.declared_attributes.select { |a| !a.abstract? && a.jpa.persistent? }.each do |attribute| %>
  public static volatile javax.persistence.metamodel.SingularAttribute<<%= entity.jpa.name %>, <%= attribute.jpa.non_primitive_java_type %>> <%= attribute.jpa.field_name %>;<%
   end
  entity.referencing_attributes.select { |attribute| !(attribute.abstract? || attribute.inherited?) && attribute.entity.jpa? && attribute.inverse.jpa.traversable? }.each do |attribute| %>
  public static volatile javax.persistence.metamodel.<%= attribute.inverse.multiplicity == :many ? "List" : "Singular" %>Attribute<<%= entity.jpa.name %>, <%= attribute.entity.jpa.qualified_name %>> <%= Domgen::Naming.camelize(attribute.inverse.multiplicity == :many ? Domgen::Naming.pluralize(attribute.inverse.relationship_name) : attribute.inverse.relationship_name) %>;<% end %>
}
